---
// ブログページの一般レイアウトを作成する.
// またブログ記事タイトルを受け取った処理も行う.

import type { OGPInfo } from "@lib/types";
import GeneralPageLayout from "./GeneralPageLayout.astro";

export interface Props {
  title?: string;
  ogp: OGPInfo;
  usingLatex?: boolean;
}
const { title: propTitle, ogp, usingLatex = false } = Astro.props;
const title =
  propTitle !== undefined
    ? `Under Construction | Blog | ${propTitle}`
    : "Under Construction | Blog";
---

<GeneralPageLayout ogp={ogp} title={title}>
  {
    usingLatex && (
      <link
        rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
        integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
        fetchpriority="low"
        crossorigin="anonymous"
        slot="extra-header"
      />
    )
  }

  <slot />
</GeneralPageLayout>

<script>
  // タグをクリックした際カードコンポーネントによる遷移を阻止する処理
  const cards = document.querySelectorAll<HTMLElement>("a.article-link");
  cards.forEach((card) => {
    card.addEventListener("click", (ev) => {
      const target = ev.target as HTMLElement;
      target.dataset.hasOwnProperty("tagUrl") ? ev.preventDefault() : null;
    });
  });
  // タグコンポーネントにクリックイベントハンドラを割り当てる処理
  const tagButtons =
    document.querySelectorAll<HTMLElement>("button.article-tag");
  tagButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      if (btn.dataset.tagUrl) {
        window.location.href = btn.dataset.tagUrl;
      }
    });
  });
</script>
