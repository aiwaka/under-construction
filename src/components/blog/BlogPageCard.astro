---
import type { BlogPostEntry } from "@lib/contents/blog";

import BlogPageCardLargeContents from "./BlogPageCardLargeContents.astro";
import BlogPageCardSmallContents from "./BlogPageCardSmallContents.astro";

interface Props {
  entry: BlogPostEntry;
  /** サムネイルなどを省略した小さい形式にするかどうか */
  mini?: boolean;
  hideTags: boolean;
}

const { entry, mini, hideTags } = Astro.props;
const draft = entry.draft;
---

<a
  class="article-link"
  href={`${import.meta.env.BASE_URL}blog/${entry.id}`}
  data-astro-prefetch
>
  <div class="article-card" class:list={{ draft }}>
    {
      !mini ? (
        <BlogPageCardLargeContents entry={entry} hideTags={hideTags} />
      ) : (
        <BlogPageCardSmallContents entry={entry} />
      )
    }
  </div>
</a>

<style>
  /* このリンクの親はグリッドボックスである前提なので, その大きさ指定やgap等の影響を受ける. */
  .article-link {
    display: block;
    width: 100%;
    border: 1px solid var(--main-font-color);
    border-radius: 3px;
    background-color: rgba(var(--main-bg-color-params), 0.6);
    overflow: hidden;
  }
  .article-card {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
  }
  .article-card:hover {
    background-color: var(--main-font-color);
    color: var(--main-bg-color);
  }
  .article-card.draft {
    background-color: lightgray;
  }
</style>
