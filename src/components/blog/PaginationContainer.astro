---
// ページ遷移ボタンを管理する
interface Props {
  lastPage: number;
  currentPage: number;
}
const { lastPage, currentPage } = Astro.props;
const range = (num: number) => [...Array(num)].map((_, i) => i);
---

<div class="pagination-section">
  <div class="pagination-container">
    {
      currentPage === 1 ? (
        <div class="page-button disabled">
          <span>&lt;&lt;</span>
        </div>
      ) : (
        <a href={`/blog/1`}>
          <div class="page-button">
            <span>&lt;&lt;</span>
          </div>
        </a>
      )
    }
    {
      currentPage === 1 ? (
        <div class="page-button disabled">
          <span>&lt;</span>
        </div>
      ) : (
        <a href={`/blog/${currentPage - 1}`}>
          <div class="page-button">
            <span>&lt;</span>
          </div>
        </a>
      )
    }

    {
      range(5).map((num) => {
        const temp = num + currentPage - 2;
        if (range(lastPage).includes(temp - 1)) {
          return (
            <a href={`/blog/${temp}`}>
              <div class="page-button">
                <span>{temp}</span>
              </div>
            </a>
          );
        } else {
          return (
            <div class="page-button disabled">
              <span> </span>
            </div>
          );
        }
      })
    }
    {
      currentPage === lastPage ? (
        <div class="page-button disabled">
          <span>&gt;</span>
        </div>
      ) : (
        <a href={`/blog/${currentPage + 1}`}>
          <div class="page-button">
            <span>&gt;</span>
          </div>
        </a>
      )
    }
    {
      currentPage === lastPage ? (
        <div class="page-button disabled">
          <span>&gt;&gt;</span>
        </div>
      ) : (
        <a href={`/blog/${lastPage}`}>
          <div class="page-button">
            <span>&gt;&gt;</span>
          </div>
        </a>
      )
    }
  </div>
</div>

<style>
  .pagination-section {
    width: 100%;
    display: flex;
    justify-content: center;
    margin: 2rem auto;
  }
  .pagination-container {
    display: flex;
    width: fit-content;
    & .page-button {
      text-align: center;
      width: 2rem;
      height: 2rem;
      border: 1px solid var(--main-color);
      border-radius: 2px;
      background-color: var(--main-bg-color);
      & span {
        display: inline-block;
        line-height: 2rem;
      }
      &:hover {
        cursor: pointer;
        background-color: rgba(var(--main-color-params), 0.5);
      }
      &.disabled {
        color: gray;
        background-color: transparent;
        border: 1px dashed gray;
        cursor: auto;
      }
    }
  }
</style>
