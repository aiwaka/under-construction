---
import type { SiblingStationType } from "@lib/types";
import StationPageLink from "./StationPageLink.svelte";
import { createHrefToLineSlug } from "@lib/other/station-collections";

interface Props {
  siblings: SiblingStationType;
}

const { siblings } = Astro.props;

const lineHref = createHrefToLineSlug(
  siblings.companies[0].companyId,
  siblings.lineId,
);
---

<>
  {
    siblings.companies.length === 1 ? (
      <a href={lineHref}>
        <h3>{siblings.lineName}</h3>
      </a>
    ) : (
      <>
        <h3>
          {siblings.lineName}（
          {siblings.companies
            .flatMap((company) => {
              const slug = createHrefToLineSlug(
                company.companyId,
                siblings.lineId,
              );
              return [<a href={slug}>{company.companyName}</a>, <>、</>];
            })
            .slice(0, -1)}
          ）
        </h3>
      </>
    )
  }
</>

<div class="siblings-container">
  {
    siblings.prev && (
      <div class="sibling-link prev">
        <div class="link-text">
          &larr; <StationPageLink data={siblings.prev} />
        </div>
      </div>
    )
  }
  {
    siblings.next && (
      <div class="siblings-link next">
        <div class="link-text">
          <StationPageLink data={siblings.next} /> &rarr;
        </div>
      </div>
    )
  }
</div>

<style>
  .siblings-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 25%;
    margin: 1rem 0;

    @media (max-width: 1024px) {
      column-gap: 1rem;
    }
  }
  .siblings-link {
    display: flex;
  }
  .prev {
    grid-column: 1 / 2;
  }
  .next {
    grid-column: -2 / -1;
    justify-self: flex-end;
  }
</style>
