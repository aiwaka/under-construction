---
import type { InferGetStaticPropsType } from "astro";
import { getImage } from "astro:assets";

import type { DownloadedStationCollection } from "src/integrations/load-station-collections";
import { dateText } from "@lib/utils";
import { getStationEntries } from "@lib/more/station-collections";
import { getLocalStationCollectionsData } from "@lib/more/station-collections";

import GeneralPageLayout from "@layouts/GeneralPageLayout.astro";
import CollectionPictureList from "@components/more/station-collections/CollectionPictureList.astro";

export async function getStaticPaths() {
  /** 何らかの理由で取得に失敗した瞬間`true`になる */
  let stationCollectionsFetchFailed = false;
  let stationCollectionsData: DownloadedStationCollection | null = null;
  try {
    stationCollectionsData = getLocalStationCollectionsData();
  } catch (e) {
    console.error(e);
    stationCollectionsFetchFailed = true;
  }

  if (stationCollectionsFetchFailed || stationCollectionsData === null) {
    return [];
  }
  const stationEntries = await getStationEntries(stationCollectionsData);
  return stationEntries.map((entry) => {
    const id = entry.id;
    // const next = i === 0 ? null : array.at(i - 1) ?? null;
    // const prev = i === array.length ? null : array.at(i + 1) ?? null;
    return {
      params: { slug: id },
      props: { entry: entry },
    };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props as Props;
const { name, lineNames, CommentContent, updatedAt, images, firstVisitDate } =
  entry;

// typeが駅舎のものを探す。無ければのものを使う
const thumbImage = images.find((img) => img.type.includes("駅舎")) || images[0];
const thumbnail = await getImage({
  src: thumbImage.src,
  height: thumbImage.height,
  width: thumbImage.width,
});

const PAGE_NAME = `Under Construction | 鉄道駅コレクション ${name}` as const;

const ogp = {
  url: Astro.request.url,
  type: "blog",
  title: PAGE_NAME,
  description: "訪問した鉄道駅をまとめたページです",
  siteName: "Under Construction",
  image:
    "https://aiwaka.github.io" +
    (thumbnail.src ?? "/under-construction/img/blue_2.png"),
};
---

<GeneralPageLayout ogp={ogp} title={PAGE_NAME}>
  <a
    href={`${import.meta.env.BASE_URL}station-collections`}
    class="to-top-anchor">コレクショントップへ戻る</a
  >
  <h1>{name}</h1>
  <div class="station-lines-block">
    <span>所属路線：{lineNames.join("・")}</span>
  </div>
  <div class="date-block">
    <span>
      初訪問日：{firstVisitDate ? dateText(new Date(firstVisitDate)) : "不明"}
    </span>
  </div>
  <div class="update-date-block">
    <span>
      {dateText(new Date(updatedAt))}更新
    </span>
  </div>
  <div class="img-container">
    <img
      src={thumbnail.src}
      width={thumbnail.attributes.width}
      height={thumbnail.attributes.height}
      alt={thumbnail.attributes.alt}
      loading="eager"
      decoding="async"
    />
  </div>

  <h2>コメント</h2>
  <CommentContent class="comment" />

  <h2>駅舎</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("駅舎"))}
  />

  <h2>構内</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("駅構内"))}
  />

  <h2>駅周辺</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("駅周辺"))}
  />
  <h2>駅名標</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("駅名標"))}
  />
  <h2>車両</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("車両"))}
  />
  <h2>時刻表</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("時刻表"))}
  />
  <h2>路線図</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("路線図"))}
  />
  <h2>スタンプ</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("スタンプ"))}
  />
  <h2>切符</h2>
  <CollectionPictureList
    images={images.filter((i) => i.type.includes("切符"))}
  />
  <a
    href={`${import.meta.env.BASE_URL}station-collections`}
    class="to-top-anchor">コレクショントップへ戻る</a
  >
</GeneralPageLayout>

<style>
  .to-top-anchor {
    text-decoration: underline;
  }
  .img-container {
    border: 4px solid var(--main-font-color);
    width: 100%;
    height: 45vh;
    clip: rect(0, 0, 0, 0);
    margin: 1rem auto;
  }
  .img-container > img {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }
  p.comment {
    margin: 1.2rem auto;
    margin-left: 0.4rem;
  }
</style>
