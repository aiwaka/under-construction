---
import ArticleCardContainer from "@components/blog/ArticleCardContainer.svelte";
import PaginationContainer from "@components/blog/PaginationContainer.astro";
import BlogGeneralLayout from "@layouts/BlogGeneralLayout.astro";
import { ArticleAttribute } from "@lib/articles";
import { getFilenameFromPath, POST_PER_PAGE } from "@lib/utils";
import type { GetStaticPathsOptions, Page } from "astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await Astro.glob("../blog/*.mdx");
  const nonDraftPosts = posts.filter((post) => !post.frontmatter.draft);
  const postAttrList = nonDraftPosts.map((post) => {
    const frontmatter = post.frontmatter as Record<string, any> &
      ArticleAttribute;
    const filename = getFilenameFromPath(post.file) ?? "";
    return new ArticleAttribute(
      filename,
      frontmatter.title,
      frontmatter.description,
      frontmatter.thumbnail,
      new Date(frontmatter.date),
      frontmatter.tags
    );
  });
  postAttrList.sort((a, b) => (a.date < b.date ? 1 : -1));
  return paginate(postAttrList, { pageSize: POST_PER_PAGE });
}
// ページ分割されたデータは、すべて "page" プロパティとして渡される
const { page } = Astro.props as { page: Page<ArticleAttribute> };
---

<BlogGeneralLayout title="">
  <h2>Blog</h2>
  <h3>{page.currentPage}</h3>
  <ArticleCardContainer cardList={page.data} />
  <PaginationContainer
    currentPage={page.currentPage}
    lastPage={page.lastPage}
  />
</BlogGeneralLayout>
