---
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";

import { getBlogPostEntries } from "@lib/contents/blog";
import { POST_PER_PAGE, sortArrayByDate } from "@lib/utils";

import BlogGeneralLayout from "@layouts/BlogGeneralLayout.astro";
import BlogPageCardContainer from "@components/blog/BlogPageCardContainer.astro";
import PaginationContainer from "@components/blog/PaginationContainer.astro";

export async function getStaticPaths() {
  const allTagList = [] as string[];
  await getBlogPostEntries(allTagList);
  return await Promise.all(
    allTagList.map(async (tag) => {
      return {
        params: {
          tag,
        },
        props: {
          blogPostEntries: await getBlogPostEntries([], { tag }),
        },
      };
    })
  );
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { blogPostEntries } = Astro.props as Props;
sortArrayByDate(blogPostEntries);

const pageNum = Math.ceil(blogPostEntries.length / POST_PER_PAGE);
const propTitle = `#${tag}の検索結果`
const ogp = {
  url: Astro.request.url,
  type: "blog",
  title: `Under Construction | Blog | ${propTitle}`,
  description: "ブログ記事のタグ検索結果",
  siteName: "Under Construction",
  image: "https://aiwaka.github.io/under-construction/img/blue_2.png",
};
---

<BlogGeneralLayout ogp={ogp} title={propTitle}>
  <h2>Blog</h2>
  <a class="to-tag-list" href={`${import.meta.env.BASE_URL}blog/tags`}>
    タグ一覧へ
  </a>
  <h3>#{tag}の検索結果</h3>
  <BlogPageCardContainer cardList={blogPostEntries.slice(0, POST_PER_PAGE)} />

  <PaginationContainer
    subbase={`blog/tags/${tag}/`}
    currentPage={1}
    lastPage={pageNum}
  />
</BlogGeneralLayout>

<style>
  .to-tag-list {
    text-decoration: underline;
  }
</style>
