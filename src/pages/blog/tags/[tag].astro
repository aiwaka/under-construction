---
import ArticleCardContainer from "@components/blog/ArticleCardContainer.svelte";
import PaginationContainer from "@components/blog/PaginationContainer.astro";
import BlogGeneralLayout from "@layouts/BlogGeneralLayout.astro";
import type { ArticleAttribute } from "@lib/articles";
import { getAttrList, POST_PER_PAGE } from "@lib/utils";

export async function getStaticPaths() {
  // 全記事を取得
  const posts = await Astro.glob("../../blog/*.mdx");
  const nonDraftPosts = posts.filter((post) => !post.frontmatter.draft);
  // タグ一覧を取得
  const allTags = nonDraftPosts.reduce((prev, curr) => {
    return prev.concat(curr.frontmatter.tags);
  }, [] as string[]);
  const uniqueAllTags = Array.from(new Set(allTags));
  return uniqueAllTags.map((tag) => ({
    params: {
      tag,
    },
    props: {
      postAttrList: getAttrList(nonDraftPosts, { tag }),
    },
  }));
}

const { tag } = Astro.params;
const postAttrList = Astro.props.postAttrList as ArticleAttribute[];
postAttrList.sort((a, b) => (a.date < b.date ? 1 : -1));

const pageNum = Math.ceil(postAttrList.length / POST_PER_PAGE);
---

<BlogGeneralLayout title="">
  <h2>Blog</h2>
  <a class="to-tag-list" href="/blog/tags">タグ一覧へ</a>
  <h3>#{tag}の検索結果</h3>
  <ArticleCardContainer cardList={postAttrList} />

  <!-- TODO: タグフィルタにおけるページネーションを作成する -->
  <PaginationContainer currentPage={1} lastPage={pageNum} />
</BlogGeneralLayout>

<style>
  .to-tag-list {
    text-decoration: underline;
  }
</style>
