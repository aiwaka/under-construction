---
import ArticleCardContainer from "@components/blog/ArticleCardContainer.astro";
import PaginationContainer from "@components/blog/PaginationContainer.astro";
import BlogGeneralLayout from "@layouts/BlogGeneralLayout.astro";
import type { ArticleAttribute } from "@lib/articles";
import { getAllTagSet, getAttrList, POST_PER_PAGE } from "@lib/utils";
import type { GetStaticPathsOptions, Page } from "astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  // 全記事を取得
  const posts = await Astro.glob("../../../blog/*.mdx");
  const allTagList = Array.from(getAllTagSet(posts));
  return allTagList.map((tag) => {
    const attrList = getAttrList(posts, { tag });
    return paginate(attrList, { params: { tag }, pageSize: POST_PER_PAGE });
  });
}

const { page } = Astro.props as { page: Page<ArticleAttribute> };
const { tag } = Astro.params;
const ogp = {
  url: Astro.request.url,
  type: "blog",
  title: `Under Construction | Blog | #${tag}の検索結果`,
  description: "ブログ記事のタグ検索結果",
  siteName: "Under Construction",
  image: "https://littleikawa.github.io/under-construction/img/blue_2.png",
};
---

<BlogGeneralLayout ogp={ogp}>
  <h2>Blog</h2>
  <a class="to-tag-list" href={`${import.meta.env.BASE_URL}blog/tags`}
    >タグ一覧へ</a
  >
  <h3>#{tag}の検索結果：{page.currentPage}</h3>
  <ArticleCardContainer cardList={page.data} />
  <PaginationContainer
    subbase={`blog/tags/${tag}/`}
    currentPage={page.currentPage}
    lastPage={page.lastPage}
  />
</BlogGeneralLayout>

<style>
  .to-tag-list {
    text-decoration: underline;
  }
</style>
